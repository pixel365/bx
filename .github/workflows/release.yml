name: Release

permissions:
  contents: read

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639
        with:
          go-version: '1.24'

      - name: Install GoReleaser
        run: |
          mkdir -p goreleaser
          curl -sSL https://github.com/goreleaser/goreleaser/releases/download/v2.7.0/goreleaser_Linux_x86_64.tar.gz | tar -xzv -C goreleaser

      - name: Install syft
        run: |
          mkdir -p syft
          curl -sSL https://github.com/anchore/syft/releases/download/v1.20.0/syft_1.20.0_linux_amd64.tar.gz | tar -xzv -C syft
          sudo mv syft/syft /usr/local/bin/

      - name: Import GPG key
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
          gpgconf --launch gpg-agent
          gpg --list-secret-keys

      - name: Run GoReleaser
        run: |
          ./goreleaser/goreleaser release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_TTY: dummy
